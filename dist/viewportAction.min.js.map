{"version":3,"sources":["webpack://viewportAction/webpack/universalModuleDefinition","webpack://viewportAction/webpack/bootstrap","webpack://viewportAction/./src/index.ts","webpack://viewportAction/./src/viewportAction.ts","webpack://viewportAction/./src/viewportEvent.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default","timeout","items","Set","defaultAddOptions","wait","once","document","removeMethod","item","has","delete","getElement","element","defaultView","querySelector","check","clientWidth","clientHeight","e","options","clientRect","getBoundingClientRect","visibleHeight","height","top","bottom","availableTop","availableBottom","availableLeft","left","availableRight","right","availableWidth","availableHeight","details","freeze","availableArea","width","callback","removeHandler","target","detail","createEvent","handler","clearTimeout","setTimeout","html","documentElement","size","removeEventListener","viewportAction","whenDocumentReady","doc","nodeType","readyState","addEventListener","cordova","add","mergedOptions","this","Element","ownerDocument","failedCallback","originalEvent","timeStamp"],"mappings":"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","file":"viewportAction.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"viewportAction\"] = factory();\n\telse\n\t\troot[\"viewportAction\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export { default } from './viewportAction';","import { Detail } from './EventOptions';\nimport ViewportEvent from './viewportEvent';\n\nlet timeout: any;\n\nexport interface Item {\n    element: HTMLElement;\n    callback: Callback;\n    options: Options;\n}\n\nexport interface Options {\n    readonly wait?: number;\n    readonly once?: boolean;\n    readonly document?: Document;\n}\n\nexport type Callback = (e?: ViewportEvent) => void;\n\nconst items = new Set<Item>();\n\nconst defaultAddOptions = {\n    wait: 100,\n    once: false,\n    document: window.document\n}\n\nconst createEvent = (element: HTMLElement, e: Event, details: Detail, removeHandler: () => void) => {\n\n    return new ViewportEvent(e, {\n        target: element,\n        detail: details,\n        removeHandler: removeHandler\n    });\n}\n\nconst removeMethod = function (item: Item) {\n\n    return function () {\n        \n        if (items.has(item))\n            items.delete(item);\n    };\n}\n\n/**\n * Resolve selectors if element is a string.\n * \n * @method getElement\n * @param element The element or selector.\n * @param defaultView The window where the element is from.\n */\nconst getElement = function (element: HTMLElement | String, defaultView: Window) {\n    return (typeof element === 'string' ? defaultView.document.querySelector(element) : element) as HTMLElement;\n}\n\nconst check = function (item: Item, items: Set<Item>, clientWidth: number, clientHeight: number, e?: Event) {\n\n    let options = item.options,\n        clientRect = item.element.getBoundingClientRect(),\n        visibleHeight = clientRect.height;\n\n    if (clientRect.top >= visibleHeight * -1 && clientRect.bottom <= clientHeight + visibleHeight) {\n\n        const availableTop = clientRect.top < 0 ? 0 : clientRect.top;\n        const availableBottom = clientRect.bottom > clientHeight ? clientHeight : clientRect.bottom;\n        const availableLeft = clientRect.left < 0 ? 0 : clientRect.left;\n        const availableRight = clientRect.right > clientWidth ? clientWidth : clientRect.right;\n        const availableWidth = availableRight - availableLeft;\n        const availableHeight = availableBottom - availableTop;\n\n        const details: Detail = Object.freeze({\n            // Available values\n            availableTop: availableTop,\n            availableBottom: availableBottom,\n            availableLeft: availableLeft,\n            availableRight: availableRight,\n            availableWidth: availableRight - availableLeft,\n            availableHeight: availableBottom - availableTop,\n            availableArea: availableWidth * availableHeight,\n            // Client rect values\n            top: clientRect.top,\n            bottom: clientRect.bottom,\n            left: clientRect.left,\n            right: clientRect.right,\n            height: clientRect.height,\n            width: clientRect.width\n        });\n\n        item.callback(createEvent(item.element, e, details, removeMethod(item)));\n        \n        // Remove the element from the list of items as the callback is already executed\n        if (options.once)\n            items.delete(item);\n    }\n}\n\nconst handler = function (e: Event) {\n\n    clearTimeout(timeout);\n\n    // Delay the checks\n    timeout = setTimeout(function () {\n\n        let html = document.documentElement,\n            clientWidth = html.clientWidth,\n            clientHeight = html.clientHeight,\n            item;\n\n        for (item of items) {\n            check(item, items, clientWidth, clientHeight, e);\n        }\n\n        // Unbind the events if there nothing to watch for\n        if (!items.size) {\n            \n            window.removeEventListener('resize', handler, false);\n            window.removeEventListener('scroll', handler, false);\n        }\n\n    }, 500);\n}\n\nconst viewportAction = Object.create({\n    \n    /**\n     * Execute a callback function when a given document is ready.\n     * \n     * NOTE: this method is used internally by the other methods and it's\n     * exposed for convenience in case you would like to used it.\n     * \n     * @param callback \n     * @param doc The optional document. It defaults to `window.document`.\n     */\n    whenDocumentReady: function (callback: (defaultView?: Window, e?: Event) => void, doc: Document) {\n\n        // Fallback to the current document\n        doc = doc && doc.nodeType === 9 ? doc : window.document;\n\n        if (doc.readyState === 'complete') {\n            callback(doc.defaultView);\n        } else {\n\n            // Support Cordova or document ready events\n            doc.addEventListener((window as any).cordova ? 'deviceready' : 'DOMContentLoaded', (e: Event) => {\n                callback(doc.defaultView, e);\n            }, false);\n        }\n    },\n\n    /**\n     * Add elements to be checked when available on the viewport. Also add\n     * callback to be executed when the element is on the viewport.\n     * \n     * ```javascript\n     * const options = {\n     *     // How long it should wait to call the callback. Defaults to 0.\n     *     wait: 100,\n     *     // Whether to trigger the callback just once. Defaults to false.\n     *     once: false,\n     *     // The document the element will be checked against. Defaults to window.document.\n     *     document: window.document\n     * };\n     * \n     * viewportAction.add('#my-selector-or-element', (e) => { ... }, options);\n     * ```\n     * \n     * @param element The HTML element or the selector.\n     * @param callback The function to be executed when on viewport.\n     * @param options Some optional parameters\n     */\n    add: function (element: HTMLElement | String, callback: Callback, options: Options = {}) {\n\n        const mergedOptions = {...options, ...defaultAddOptions};\n\n        this.whenDocumentReady((defaultView: Window, e: Event) => {\n\n            element = getElement(element, defaultView);\n\n            // Only bind the events if the node is an instance of Element and attached to a document\n            if (!(element instanceof Element) || element.ownerDocument !== defaultView.document)\n                return;\n\n            // Only bind the DOM events when there is something to check\n            if (!items.size) {\n\n                defaultView.addEventListener('resize', handler, false);\n                defaultView.addEventListener('scroll', handler, false);\n            }\n            \n            items.add({\n                element: element,\n                callback: callback,\n                options: mergedOptions\n            });\n\n            // Call the handler right away to check it the element is already in the\n            // viewport\n            handler(e);\n\n        }, mergedOptions ? mergedOptions.document : null);\n    },\n\n    /**\n     * Check when an element is on the viewport.\n     * \n     * @param element The element or selector.\n     * @param callback The function to be executed when on viewport.\n     * @param failedCallback The function to be executed when the element is not found in the document. \n     */\n    check: function (element: HTMLElement | String, callback: Callback, failedCallback: Function) {\n\n        element = getElement(element, window);\n\n        // Only bind the events if the node is an instance of Element and attached to a document\n        if (!(element instanceof Element) || element.ownerDocument !== window.document) {\n            failedCallback();\n            return;\n        }\n\n        const html = document.documentElement;\n        const item = {\n            element: element,\n            callback: callback,\n            options: {\n                wait: 0,\n                once: false\n            }\n        };\n\n        check(item, new Set(), html.clientWidth, html.clientHeight);\n    }\n});\n\nexport default viewportAction;","import EventOptions from './EventOptions';\n\n/**\n * The event specific to the ViewportAction.\n */\nclass ViewportEvent {\n\n    readonly type: 'viewport';\n    readonly originalEvent: Event;\n    readonly detail: Object;\n    readonly target: HTMLElement;\n    readonly removeHandler: () => void;\n\n    constructor (e: Event, options: EventOptions) {\n\n        this.originalEvent = e;\n        this.detail = options.detail;\n        this.target = options.target;\n        this.removeHandler = options.removeHandler;\n    }\n\n    get currentTarget () {\n        return this.target;\n    }\n\n    get srcElement () {\n        return this.target;\n    }\n\n    get timeStamp () {\n        return this.originalEvent.timeStamp;\n    }\n}\n\nexport default ViewportEvent;"],"sourceRoot":""}